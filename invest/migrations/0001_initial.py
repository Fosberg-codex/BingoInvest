# Generated by Django 4.0.6 on 2022-10-26 22:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Phone', models.CharField(max_length=200)),
                ('Referral_Code', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('total_profit', models.CharField(default='$0', editable=False, max_length=200)),
                ('amount_deposited', models.CharField(default='$0', max_length=200)),
                ('amount_withdrawn', models.CharField(default='$0', max_length=200)),
                ('number_of_transaction', models.CharField(default='0', max_length=200)),
                ('personal_referral_code', models.CharField(default='(not available)', max_length=200, null=True)),
                ('vip_level', models.CharField(choices=[('None', 'None'), ('VIP 1', 'VIP1'), ('VIP 2', 'VIP 2'), ('VIP 3', 'VIP 3'), ('VIP 4', 'VIP 4'), ('VIP 5', 'VIP 5'), ('VIP 6', 'VIP 6')], default='None', max_length=300, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Transaction_type', models.CharField(choices=[('Deposit', 'Deposit'), ('Withdrawal', 'Withdrawal')], max_length=300, null=True)),
                ('amount', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Transaction_history', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customers_Personal_Finance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_profit', models.CharField(default='$0', editable=False, max_length=200)),
                ('amount_deposited', models.CharField(default='$0', max_length=200)),
                ('amount_withdrawn', models.CharField(default='$0', max_length=200)),
                ('number_of_transaction', models.CharField(default='0', max_length=200)),
                ('referral_code', models.CharField(default='(not available)', max_length=200, null=True)),
                ('vip_level', models.CharField(choices=[('None', 'None'), ('VIP 1', 'VIP1'), ('VIP 2', 'VIP 2'), ('VIP 3', 'VIP 3'), ('VIP 4', 'VIP 4'), ('VIP 5', 'VIP 5'), ('VIP 6', 'VIP 6')], default='None', max_length=300, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Personal_finances', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
